# Change prefix
set -g prefix M-Space
unbind C-b

# Keybinds
bind -n M-? list-keys
bind -n M-C copy-mode
bind -n M-V paste-buffer
bind -n M-d detach-client
bind -n M-p display-panes

bind -n M-r source-file ~/.tmux.conf \; display-message "Config reloaded"
bind -n M-R refresh-client \; display-message "Refreshed"

bind -n M-v split-window -h
bind -n M-s split-window -v

bind -n M-E kill-server
bind -n M-Q kill-pane

bind -T copy-mode-vi v send-keys -X begin-selection
bind -T copy-mode-vi C-v send-keys -X rectangle-toggle
bind -T copy-mode-vi  y send-keys -X copy-selection

bind -r -n M-LEFT resize-pane -L 5
bind -r -n M-Right resize-pane -R 5
bind -r -n M-UP resize-pane -U 5
bind -r -n M-DOWN resize-pane -D 5

bind -n M-H swap-pane -U
bind -n M-L swap-pane -D

bind -n M-h select-pane -L
bind -n M-l select-pane -R
bind -n M-j select-pane -D
bind -n M-k select-pane -U

bind -n M-1 if-shell 'tmux select-window -t :1' '' 'new-window -t :1'
bind -n M-2 if-shell 'tmux select-window -t :2' '' 'new-window -t :2'
bind -n M-3 if-shell 'tmux select-window -t :3' '' 'new-window -t :3'
bind -n M-4 if-shell 'tmux select-window -t :4' '' 'new-window -t :4'
bind -n M-5 if-shell 'tmux select-window -t :5' '' 'new-window -t :5'
bind -n M-6 if-shell 'tmux select-window -t :6' '' 'new-window -t :6'
bind -n M-7 if-shell 'tmux select-window -t :7' '' 'new-window -t :7'
bind -n M-8 if-shell 'tmux select-window -t :8' '' 'new-window -t :8'
bind -n M-9 if-shell 'tmux select-window -t :9' '' 'new-window -t :9'
bind -n M-0 if-shell 'tmux select-window -t :10' '' 'new-window -t :10'

bind -n M-! run-shell "bash /home/cbassi/config/tmux_script.sh 1"
bind -n M-@ run-shell "bash /home/cbassi/config/tmux_script.sh 2"
bind -n M-'#' run-shell "bash /home/cbassi/config/tmux_script.sh 3"
bind -n M-'$' run-shell "bash /home/cbassi/config/tmux_script.sh 4"
bind -n M-'%' run-shell "bash /home/cbassi/config/tmux_script.sh 5"
bind -n M-'^' run-shell "bash /home/cbassi/config/tmux_script.sh 6"
bind -n M-'&' run-shell "bash /home/cbassi/config/tmux_script.sh 7"
bind -n M-'*' run-shell "bash /home/cbassi/config/tmux_script.sh 8"
bind -n M-'(' run-shell "bash /home/cbassi/config/tmux_script.sh 9"
bind -n M-')' run-shell "bash /home/cbassi/config/tmux_script.sh 10"

# Options
set -s escape-time 0

set -g base-index 1
setw -g pane-base-index 1

set -g default-terminal "screen-256color"

#setw -g automatic-rename on
set -g set-titles on

set -g history-limit 10000

setw -g mode-keys vi # Vi movement for copy mode using [
set -g status-keys vi

setw -g monitor-activity on
set -g visual-activity off

set -g display-time 2000

setw -g aggressive-resize on

set -g status-interval 1

# Theme
set -g status-bg black
set -g status-fg white
set -g window-status-current-bg black
set -g window-status-current-fg colour27
set -g window-status-current-attr bold
set -g status-left-length 30
setw -g window-status-activity-attr none

#new-session -A -s 0

# Smart pane switching with awareness of Vim splits.
# See: https://github.com/christoomey/vim-tmux-navigator
is_vim="ps -o state= -o comm= -t '#{pane_tty}' \
    | grep -iqE '^[^TXZ ]+ +(\\S+\\/)?g?(view|n?vim?x?)(diff)?$'"
bind-key -n M-h if-shell "$is_vim" "send-keys M-h"  "select-pane -L"
bind-key -n M-j if-shell "$is_vim" "send-keys M-j"  "select-pane -D"
bind-key -n M-k if-shell "$is_vim" "send-keys M-k"  "select-pane -U"
bind-key -n M-l if-shell "$is_vim" "send-keys M-l"  "select-pane -R"
#bind-key -n C-\ if-shell "$is_vim" "send-keys C-\\" "select-pane -l"
bind-key -T copy-mode-vi M-h select-pane -L
bind-key -T copy-mode-vi M-j select-pane -D
bind-key -T copy-mode-vi M-k select-pane -U
bind-key -T copy-mode-vi M-l select-pane -R
#bind-key -T copy-mode-vi C-\ select-pane -l
